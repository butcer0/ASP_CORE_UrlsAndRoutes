@model Result
@{  Layout = null; }

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Routing</title>
    <link rel="stylesheet" asp-href-include="lib/bootstrap/dist/css/*min.css" />
</head>
<body class="m-1 p-1">
    <table class="table table-bordered table-striped table-sm">
        <tr><th>Controller:</th><td>@Model.Controller</td></tr>
        <tr><th>Action:</th><td>@Model.Action</td></tr>
        @foreach(string key in Model.Data.Keys)
        {
            <tr><th>@key:</th><td>@Model.Data[key]</td></tr>
        }
    </table>

    <p>URL: @Url.Action("CustomVariable", "Home", new { id = 100 }) </p>


    @*Erik - 5/16/2018 asp-action, etc syntax creats an link HTML element (Href), not useful if only need to generate URL*@
    <a asp-action="CustomVariable">This is an outgoing URL</a>
    <br />
    <a asp-controller="Admin" asp-action="Index">
        This targets another controller
    </a>
    <br/>
    <a asp-controller="Customer" asp-action="Index">This is an outgoing URL</a>
    <br />
    <a asp-controller="Home" asp-action="Index" asp-route-id="Hello-ID">
        This is an outgoing URL with Id for Home
    </a>
    <br/>
    <a asp-controller="Home" asp-action="Index" asp-route-id="Hello"
       asp-protocol="https" asp-host="myserver.mydomain.com"
       asp-fragment="myFragment">
        This is a fully qualified outgoing URL
    </a>
    <br/>
    <a asp-route="out">This is an outgoing URL using the 'out' route</a>
    <br />
    <br />
    <a asp-route-legacyurl="/articles/Windows_3.1_Overview.html"
       class="btn btn-primary">
        This is an outgoing URL to a Legacy Article
    </a>
    <p>
        URL: @Url.Action(null, null, new { legacyurl = "/articles/Windows_3.1_Overview.html" })
    </p>
</body>
</html>